services:
  db:
    image: postgres:15
    container_name: moyeo-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: moyeo-redis
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --notify-keyspace-events Ex
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-exporter:
    image: oliver006/redis_exporter
    container_name: moyeo-redis-exporter
    ports:
      - "${REDIS_EXPORTER_PORT}:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: moyeo-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT}
    ports:
      - "${ZOOKEEPER_PORT}:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "${ZOOKEEPER_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: moyeo-kafka
    ports:
      - "${KAFKA_PORT}:9092"
      - "${KAFKA_PORT_DOCKER}:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://${KAFKA_ADVERTISED_HOST}:${KAFKA_PORT_DOCKER}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: moyeo-kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "${KAFKA_UI_PORT}:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:${ZOOKEEPER_PORT}

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: moyeo-kafka-exporter
    ports:
      - "${KAFKA_EXPORTER_PORT}:9308"
    command:
      - "--kafka.server=kafka:${KAFKA_PORT}"
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "kafka", "${KAFKA_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: moyeo-prometheus
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: moyeo-grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana

  loki:
    image: grafana/loki:latest
    container_name: moyeo-loki
    ports:
      - "${LOKI_PORT}:3100"
    command: -config.file=/mnt/config/loki-config.yml
    volumes:
      - ./loki-config.yml:/mnt/config/loki-config.yml

  backend:
    build: .
    container_name: moyeo-backend
    ports:
      - "${SERVER_PORT}:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SERVER_PORT=${SERVER_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_REDIRECT_URI=${KAKAO_REDIRECT_URI}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
      - LOKI_PUSH_URL=${LOKI_PUSH_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - KAFKA_BROKER=kafka:${KAFKA_PORT}

volumes:
  grafana-data:
  prometheus-data: